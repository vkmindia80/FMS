{"ast":null,"code":"import { disposables as b } from './disposables.js';\nimport { match as L } from './match.js';\nimport { getOwnerDocument as m } from './owner.js';\nlet c = [\"[contentEditable=true]\", \"[tabindex]\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"iframe\", \"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\"].map(e => `${e}:not([tabindex='-1'])`).join(\",\");\nvar M = (n => (n[n.First = 1] = \"First\", n[n.Previous = 2] = \"Previous\", n[n.Next = 4] = \"Next\", n[n.Last = 8] = \"Last\", n[n.WrapAround = 16] = \"WrapAround\", n[n.NoScroll = 32] = \"NoScroll\", n))(M || {}),\n  N = (o => (o[o.Error = 0] = \"Error\", o[o.Overflow = 1] = \"Overflow\", o[o.Success = 2] = \"Success\", o[o.Underflow = 3] = \"Underflow\", o))(N || {}),\n  F = (t => (t[t.Previous = -1] = \"Previous\", t[t.Next = 1] = \"Next\", t))(F || {});\nfunction f(e = document.body) {\n  return e == null ? [] : Array.from(e.querySelectorAll(c)).sort((r, t) => Math.sign((r.tabIndex || Number.MAX_SAFE_INTEGER) - (t.tabIndex || Number.MAX_SAFE_INTEGER)));\n}\nvar T = (t => (t[t.Strict = 0] = \"Strict\", t[t.Loose = 1] = \"Loose\", t))(T || {});\nfunction h(e, r = 0) {\n  var t;\n  return e === ((t = m(e)) == null ? void 0 : t.body) ? !1 : L(r, {\n    [0]() {\n      return e.matches(c);\n    },\n    [1]() {\n      let l = e;\n      for (; l !== null;) {\n        if (l.matches(c)) return !0;\n        l = l.parentElement;\n      }\n      return !1;\n    }\n  });\n}\nfunction D(e) {\n  let r = m(e);\n  b().nextFrame(() => {\n    r && !h(r.activeElement, 0) && y(e);\n  });\n}\nvar w = (t => (t[t.Keyboard = 0] = \"Keyboard\", t[t.Mouse = 1] = \"Mouse\", t))(w || {});\ntypeof window != \"undefined\" && typeof document != \"undefined\" && (document.addEventListener(\"keydown\", e => {\n  e.metaKey || e.altKey || e.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = \"\");\n}, !0), document.addEventListener(\"click\", e => {\n  e.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = \"\");\n}, !0));\nfunction y(e) {\n  e == null || e.focus({\n    preventScroll: !0\n  });\n}\nlet S = [\"textarea\", \"input\"].join(\",\");\nfunction H(e) {\n  var r, t;\n  return (t = (r = e == null ? void 0 : e.matches) == null ? void 0 : r.call(e, S)) != null ? t : !1;\n}\nfunction I(e, r = t => t) {\n  return e.slice().sort((t, l) => {\n    let o = r(t),\n      i = r(l);\n    if (o === null || i === null) return 0;\n    let n = o.compareDocumentPosition(i);\n    return n & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : n & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;\n  });\n}\nfunction _(e, r) {\n  return O(f(), r, {\n    relativeTo: e\n  });\n}\nfunction O(e, r, {\n  sorted: t = !0,\n  relativeTo: l = null,\n  skipElements: o = []\n} = {}) {\n  let i = Array.isArray(e) ? e.length > 0 ? e[0].ownerDocument : document : e.ownerDocument,\n    n = Array.isArray(e) ? t ? I(e) : e : f(e);\n  o.length > 0 && n.length > 1 && (n = n.filter(s => !o.includes(s))), l = l != null ? l : i.activeElement;\n  let E = (() => {\n      if (r & 5) return 1;\n      if (r & 10) return -1;\n      throw new Error(\"Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last\");\n    })(),\n    x = (() => {\n      if (r & 1) return 0;\n      if (r & 2) return Math.max(0, n.indexOf(l)) - 1;\n      if (r & 4) return Math.max(0, n.indexOf(l)) + 1;\n      if (r & 8) return n.length - 1;\n      throw new Error(\"Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last\");\n    })(),\n    p = r & 32 ? {\n      preventScroll: !0\n    } : {},\n    d = 0,\n    a = n.length,\n    u;\n  do {\n    if (d >= a || d + a <= 0) return 0;\n    let s = x + d;\n    if (r & 16) s = (s + a) % a;else {\n      if (s < 0) return 3;\n      if (s >= a) return 1;\n    }\n    u = n[s], u == null || u.focus(p), d += E;\n  } while (u !== i.activeElement);\n  return r & 6 && H(u) && u.select(), 2;\n}\nexport { M as Focus, N as FocusResult, T as FocusableMode, y as focusElement, _ as focusFrom, O as focusIn, f as getFocusableElements, h as isFocusableElement, D as restoreFocusIfNecessary, I as sortByDomNode };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}