{"ast":null,"code":"import m, { useMemo as d, useRef as M } from \"react\";\nimport { Features as H, Hidden as T } from '../internal/hidden.js';\nimport { useEvent as E } from './use-event.js';\nimport { useOwnerDocument as b } from './use-owner.js';\nfunction N({\n  defaultContainers: o = [],\n  portals: r,\n  mainTreeNodeRef: u\n} = {}) {\n  var f;\n  let t = M((f = u == null ? void 0 : u.current) != null ? f : null),\n    l = b(t),\n    c = E(() => {\n      var i, s, a;\n      let n = [];\n      for (let e of o) e !== null && (e instanceof HTMLElement ? n.push(e) : \"current\" in e && e.current instanceof HTMLElement && n.push(e.current));\n      if (r != null && r.current) for (let e of r.current) n.push(e);\n      for (let e of (i = l == null ? void 0 : l.querySelectorAll(\"html > *, body > *\")) != null ? i : []) e !== document.body && e !== document.head && e instanceof HTMLElement && e.id !== \"headlessui-portal-root\" && (e.contains(t.current) || e.contains((a = (s = t.current) == null ? void 0 : s.getRootNode()) == null ? void 0 : a.host) || n.some(L => e.contains(L)) || n.push(e));\n      return n;\n    });\n  return {\n    resolveContainers: c,\n    contains: E(n => c().some(i => i.contains(n))),\n    mainTreeNodeRef: t,\n    MainTreeNode: d(() => function () {\n      return u != null ? null : m.createElement(T, {\n        features: H.Hidden,\n        ref: t\n      });\n    }, [t, u])\n  };\n}\nfunction y() {\n  let o = M(null);\n  return {\n    mainTreeNodeRef: o,\n    MainTreeNode: d(() => function () {\n      return m.createElement(T, {\n        features: H.Hidden,\n        ref: o\n      });\n    }, [o])\n  };\n}\nexport { y as useMainTreeNode, N as useRootContainers };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}