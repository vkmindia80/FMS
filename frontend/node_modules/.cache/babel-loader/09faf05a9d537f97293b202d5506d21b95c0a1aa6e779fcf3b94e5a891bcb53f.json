{"ast":null,"code":"import { useEffect as m, useRef as E } from \"react\";\nimport { getOwnerDocument as T } from '../utils/owner.js';\nimport { useIsoMorphicEffect as N } from './use-iso-morphic-effect.js';\nfunction F({\n  container: e,\n  accept: t,\n  walk: r,\n  enabled: c = !0\n}) {\n  let o = E(t),\n    l = E(r);\n  m(() => {\n    o.current = t, l.current = r;\n  }, [t, r]), N(() => {\n    if (!e || !c) return;\n    let n = T(e);\n    if (!n) return;\n    let f = o.current,\n      p = l.current,\n      d = Object.assign(i => f(i), {\n        acceptNode: f\n      }),\n      u = n.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, d, !1);\n    for (; u.nextNode();) p(u.currentNode);\n  }, [e, c, o, l]);\n}\nexport { F as useTreeWalker };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}