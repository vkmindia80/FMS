{"ast":null,"code":"import s, { useState as c } from \"react\";\nimport { useIsMounted as m } from '../hooks/use-is-mounted.js';\nimport { Features as f, Hidden as l } from './hidden.js';\nfunction b({\n  onFocus: n\n}) {\n  let [r, o] = c(!0),\n    u = m();\n  return r ? s.createElement(l, {\n    as: \"button\",\n    type: \"button\",\n    features: f.Focusable,\n    onFocus: a => {\n      a.preventDefault();\n      let e,\n        i = 50;\n      function t() {\n        if (i-- <= 0) {\n          e && cancelAnimationFrame(e);\n          return;\n        }\n        if (n()) {\n          if (cancelAnimationFrame(e), !u.current) return;\n          o(!1);\n          return;\n        }\n        e = requestAnimationFrame(t);\n      }\n      e = requestAnimationFrame(t);\n    }\n  }) : null;\n}\nexport { b as FocusSentinel };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}