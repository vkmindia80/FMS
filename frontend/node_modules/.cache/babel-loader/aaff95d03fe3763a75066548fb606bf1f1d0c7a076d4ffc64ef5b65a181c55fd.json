{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/contexts/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  darkMode: false,\n  sidebarCollapsed: false,\n  colorScheme: 'default' // default, warm, cool, monochrome\n};\n\n// Action types\nconst ActionTypes = {\n  TOGGLE_DARK_MODE: 'TOGGLE_DARK_MODE',\n  SET_DARK_MODE: 'SET_DARK_MODE',\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  SET_SIDEBAR_COLLAPSED: 'SET_SIDEBAR_COLLAPSED',\n  SET_COLOR_SCHEME: 'SET_COLOR_SCHEME'\n};\n\n// Reducer\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        darkMode: !state.darkMode\n      };\n    case ActionTypes.SET_DARK_MODE:\n      return {\n        ...state,\n        darkMode: action.payload\n      };\n    case ActionTypes.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarCollapsed: !state.sidebarCollapsed\n      };\n    case ActionTypes.SET_SIDEBAR_COLLAPSED:\n      return {\n        ...state,\n        sidebarCollapsed: action.payload\n      };\n    case ActionTypes.SET_COLOR_SCHEME:\n      return {\n        ...state,\n        colorScheme: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Custom hook to use theme context\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Storage keys\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst THEME_STORAGE_KEY = 'afms_theme_preferences';\n\n// Get stored preferences\nconst getStoredPreferences = () => {\n  try {\n    const stored = localStorage.getItem(THEME_STORAGE_KEY);\n    return stored ? JSON.parse(stored) : {};\n  } catch (error) {\n    console.error('Error loading theme preferences:', error);\n    return {};\n  }\n};\n\n// Store preferences\nconst storePreferences = preferences => {\n  try {\n    localStorage.setItem(THEME_STORAGE_KEY, JSON.stringify(preferences));\n  } catch (error) {\n    console.error('Error storing theme preferences:', error);\n  }\n};\n\n// Theme Provider Component\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(themeReducer, () => {\n    var _stored$darkMode, _stored$sidebarCollap, _stored$colorScheme;\n    const stored = getStoredPreferences();\n    return {\n      ...initialState,\n      darkMode: (_stored$darkMode = stored.darkMode) !== null && _stored$darkMode !== void 0 ? _stored$darkMode : window.matchMedia('(prefers-color-scheme: dark)').matches,\n      sidebarCollapsed: (_stored$sidebarCollap = stored.sidebarCollapsed) !== null && _stored$sidebarCollap !== void 0 ? _stored$sidebarCollap : false,\n      colorScheme: (_stored$colorScheme = stored.colorScheme) !== null && _stored$colorScheme !== void 0 ? _stored$colorScheme : 'default'\n    };\n  });\n\n  // Apply theme class to document\n  useEffect(() => {\n    const root = document.documentElement;\n    if (state.darkMode) {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n\n    // Apply color scheme class\n    root.classList.remove('theme-default', 'theme-warm', 'theme-cool', 'theme-monochrome');\n    root.classList.add(`theme-${state.colorScheme}`);\n\n    // Store preferences\n    storePreferences({\n      darkMode: state.darkMode,\n      sidebarCollapsed: state.sidebarCollapsed,\n      colorScheme: state.colorScheme\n    });\n  }, [state.darkMode, state.sidebarCollapsed, state.colorScheme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = e => {\n      // Only auto-switch if user hasn't manually set preference\n      const stored = getStoredPreferences();\n      if (stored.darkMode === undefined) {\n        dispatch({\n          type: ActionTypes.SET_DARK_MODE,\n          payload: e.matches\n        });\n      }\n    };\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Actions\n  const toggleDarkMode = () => {\n    dispatch({\n      type: ActionTypes.TOGGLE_DARK_MODE\n    });\n  };\n  const setDarkMode = enabled => {\n    dispatch({\n      type: ActionTypes.SET_DARK_MODE,\n      payload: enabled\n    });\n  };\n  const toggleSidebar = () => {\n    dispatch({\n      type: ActionTypes.TOGGLE_SIDEBAR\n    });\n  };\n  const setSidebarCollapsed = collapsed => {\n    dispatch({\n      type: ActionTypes.SET_SIDEBAR_COLLAPSED,\n      payload: collapsed\n    });\n  };\n  const setColorScheme = scheme => {\n    dispatch({\n      type: ActionTypes.SET_COLOR_SCHEME,\n      payload: scheme\n    });\n  };\n\n  // Get theme classes helper\n  const getThemeClasses = (baseClasses = '') => {\n    const themeClasses = {\n      default: '',\n      warm: 'theme-warm',\n      cool: 'theme-cool',\n      monochrome: 'theme-monochrome'\n    };\n    return `${baseClasses} ${themeClasses[state.colorScheme] || ''} ${state.darkMode ? 'dark' : ''}`.trim();\n  };\n\n  // Color scheme configurations\n  const colorSchemes = {\n    default: {\n      name: 'Default',\n      primary: 'blue',\n      secondary: 'indigo',\n      accent: 'purple'\n    },\n    warm: {\n      name: 'Warm',\n      primary: 'orange',\n      secondary: 'red',\n      accent: 'yellow'\n    },\n    cool: {\n      name: 'Cool',\n      primary: 'cyan',\n      secondary: 'teal',\n      accent: 'emerald'\n    },\n    monochrome: {\n      name: 'Monochrome',\n      primary: 'gray',\n      secondary: 'slate',\n      accent: 'zinc'\n    }\n  };\n\n  // Context value\n  const value = {\n    // State\n    darkMode: state.darkMode,\n    sidebarCollapsed: state.sidebarCollapsed,\n    colorScheme: state.colorScheme,\n    // Actions\n    toggleDarkMode,\n    setDarkMode,\n    toggleSidebar,\n    setSidebarCollapsed,\n    setColorScheme,\n    // Utilities\n    getThemeClasses,\n    colorSchemes,\n    currentScheme: colorSchemes[state.colorScheme]\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"zdmNZ14K4xH7PhbZ1dKnTRku1Jg=\");\n_c = ThemeProvider;\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","darkMode","sidebarCollapsed","colorScheme","ActionTypes","TOGGLE_DARK_MODE","SET_DARK_MODE","TOGGLE_SIDEBAR","SET_SIDEBAR_COLLAPSED","SET_COLOR_SCHEME","themeReducer","state","action","type","payload","ThemeContext","useTheme","_s","context","Error","THEME_STORAGE_KEY","getStoredPreferences","stored","localStorage","getItem","JSON","parse","error","console","storePreferences","preferences","setItem","stringify","ThemeProvider","children","_s2","dispatch","_stored$darkMode","_stored$sidebarCollap","_stored$colorScheme","window","matchMedia","matches","root","document","documentElement","classList","add","remove","mediaQuery","handleChange","e","undefined","addEventListener","removeEventListener","toggleDarkMode","setDarkMode","enabled","toggleSidebar","setSidebarCollapsed","collapsed","setColorScheme","scheme","getThemeClasses","baseClasses","themeClasses","default","warm","cool","monochrome","trim","colorSchemes","name","primary","secondary","accent","value","currentScheme","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\n// Initial state\nconst initialState = {\n  darkMode: false,\n  sidebarCollapsed: false,\n  colorScheme: 'default', // default, warm, cool, monochrome\n};\n\n// Action types\nconst ActionTypes = {\n  TOGGLE_DARK_MODE: 'TOGGLE_DARK_MODE',\n  SET_DARK_MODE: 'SET_DARK_MODE',\n  TOGGLE_SIDEBAR: 'TOGGLE_SIDEBAR',\n  SET_SIDEBAR_COLLAPSED: 'SET_SIDEBAR_COLLAPSED',\n  SET_COLOR_SCHEME: 'SET_COLOR_SCHEME',\n};\n\n// Reducer\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.TOGGLE_DARK_MODE:\n      return {\n        ...state,\n        darkMode: !state.darkMode,\n      };\n    case ActionTypes.SET_DARK_MODE:\n      return {\n        ...state,\n        darkMode: action.payload,\n      };\n    case ActionTypes.TOGGLE_SIDEBAR:\n      return {\n        ...state,\n        sidebarCollapsed: !state.sidebarCollapsed,\n      };\n    case ActionTypes.SET_SIDEBAR_COLLAPSED:\n      return {\n        ...state,\n        sidebarCollapsed: action.payload,\n      };\n    case ActionTypes.SET_COLOR_SCHEME:\n      return {\n        ...state,\n        colorScheme: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst ThemeContext = createContext();\n\n// Custom hook to use theme context\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Storage keys\nconst THEME_STORAGE_KEY = 'afms_theme_preferences';\n\n// Get stored preferences\nconst getStoredPreferences = () => {\n  try {\n    const stored = localStorage.getItem(THEME_STORAGE_KEY);\n    return stored ? JSON.parse(stored) : {};\n  } catch (error) {\n    console.error('Error loading theme preferences:', error);\n    return {};\n  }\n};\n\n// Store preferences\nconst storePreferences = (preferences) => {\n  try {\n    localStorage.setItem(THEME_STORAGE_KEY, JSON.stringify(preferences));\n  } catch (error) {\n    console.error('Error storing theme preferences:', error);\n  }\n};\n\n// Theme Provider Component\nexport const ThemeProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(themeReducer, () => {\n    const stored = getStoredPreferences();\n    return {\n      ...initialState,\n      darkMode: stored.darkMode ?? (window.matchMedia('(prefers-color-scheme: dark)').matches),\n      sidebarCollapsed: stored.sidebarCollapsed ?? false,\n      colorScheme: stored.colorScheme ?? 'default',\n    };\n  });\n\n  // Apply theme class to document\n  useEffect(() => {\n    const root = document.documentElement;\n    \n    if (state.darkMode) {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n    \n    // Apply color scheme class\n    root.classList.remove('theme-default', 'theme-warm', 'theme-cool', 'theme-monochrome');\n    root.classList.add(`theme-${state.colorScheme}`);\n    \n    // Store preferences\n    storePreferences({\n      darkMode: state.darkMode,\n      sidebarCollapsed: state.sidebarCollapsed,\n      colorScheme: state.colorScheme,\n    });\n  }, [state.darkMode, state.sidebarCollapsed, state.colorScheme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => {\n      // Only auto-switch if user hasn't manually set preference\n      const stored = getStoredPreferences();\n      if (stored.darkMode === undefined) {\n        dispatch({ type: ActionTypes.SET_DARK_MODE, payload: e.matches });\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Actions\n  const toggleDarkMode = () => {\n    dispatch({ type: ActionTypes.TOGGLE_DARK_MODE });\n  };\n\n  const setDarkMode = (enabled) => {\n    dispatch({ type: ActionTypes.SET_DARK_MODE, payload: enabled });\n  };\n\n  const toggleSidebar = () => {\n    dispatch({ type: ActionTypes.TOGGLE_SIDEBAR });\n  };\n\n  const setSidebarCollapsed = (collapsed) => {\n    dispatch({ type: ActionTypes.SET_SIDEBAR_COLLAPSED, payload: collapsed });\n  };\n\n  const setColorScheme = (scheme) => {\n    dispatch({ type: ActionTypes.SET_COLOR_SCHEME, payload: scheme });\n  };\n\n  // Get theme classes helper\n  const getThemeClasses = (baseClasses = '') => {\n    const themeClasses = {\n      default: '',\n      warm: 'theme-warm',\n      cool: 'theme-cool',\n      monochrome: 'theme-monochrome',\n    };\n    \n    return `${baseClasses} ${themeClasses[state.colorScheme] || ''} ${state.darkMode ? 'dark' : ''}`.trim();\n  };\n\n  // Color scheme configurations\n  const colorSchemes = {\n    default: {\n      name: 'Default',\n      primary: 'blue',\n      secondary: 'indigo',\n      accent: 'purple',\n    },\n    warm: {\n      name: 'Warm',\n      primary: 'orange',\n      secondary: 'red',\n      accent: 'yellow',\n    },\n    cool: {\n      name: 'Cool',\n      primary: 'cyan',\n      secondary: 'teal',\n      accent: 'emerald',\n    },\n    monochrome: {\n      name: 'Monochrome',\n      primary: 'gray',\n      secondary: 'slate',\n      accent: 'zinc',\n    },\n  };\n\n  // Context value\n  const value = {\n    // State\n    darkMode: state.darkMode,\n    sidebarCollapsed: state.sidebarCollapsed,\n    colorScheme: state.colorScheme,\n    \n    // Actions\n    toggleDarkMode,\n    setDarkMode,\n    toggleSidebar,\n    setSidebarCollapsed,\n    setColorScheme,\n    \n    // Utilities\n    getThemeClasses,\n    colorSchemes,\n    currentScheme: colorSchemes[state.colorScheme],\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}