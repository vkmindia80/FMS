{"ast":null,"code":"import d, { createContext as c, useContext as m } from \"react\";\nimport { useEvent as p } from '../hooks/use-event.js';\nimport { useIsoMorphicEffect as f } from '../hooks/use-iso-morphic-effect.js';\nlet a = c(() => {});\na.displayName = \"StackContext\";\nvar s = (e => (e[e.Add = 0] = \"Add\", e[e.Remove = 1] = \"Remove\", e))(s || {});\nfunction x() {\n  return m(a);\n}\nfunction b({\n  children: i,\n  onUpdate: r,\n  type: e,\n  element: n,\n  enabled: u\n}) {\n  let l = x(),\n    o = p((...t) => {\n      r == null || r(...t), l(...t);\n    });\n  return f(() => {\n    let t = u === void 0 || u === !0;\n    return t && o(0, e, n), () => {\n      t && o(1, e, n);\n    };\n  }, [o, e, n, u]), d.createElement(a.Provider, {\n    value: o\n  }, i);\n}\nexport { s as StackMessage, b as StackProvider, x as useStackContext };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}