{"ast":null,"code":"import u, { createContext as Pe, createRef as ye, useCallback as K, useContext as V, useEffect as H, useMemo as y, useReducer as Ee, useRef as q, useState as Ae } from \"react\";\nimport { FocusTrap as A } from '../../components/focus-trap/focus-trap.js';\nimport { Portal as B, useNestedPortals as Re } from '../../components/portal/portal.js';\nimport { useDocumentOverflowLockedEffect as Ce } from '../../hooks/document-overflow/use-document-overflow.js';\nimport { useEvent as R } from '../../hooks/use-event.js';\nimport { useEventListener as ve } from '../../hooks/use-event-listener.js';\nimport { useId as C } from '../../hooks/use-id.js';\nimport { useInert as z } from '../../hooks/use-inert.js';\nimport { useOutsideClick as _e } from '../../hooks/use-outside-click.js';\nimport { useOwnerDocument as Oe } from '../../hooks/use-owner.js';\nimport { useRootContainers as be } from '../../hooks/use-root-containers.js';\nimport { useServerHandoffComplete as he } from '../../hooks/use-server-handoff-complete.js';\nimport { useSyncRefs as v } from '../../hooks/use-sync-refs.js';\nimport { State as k, useOpenClosed as Se } from '../../internal/open-closed.js';\nimport { ForcePortalRoot as G } from '../../internal/portal-force-root.js';\nimport { StackMessage as Q, StackProvider as xe } from '../../internal/stack-context.js';\nimport { isDisabledReactIssue7711 as Le } from '../../utils/bugs.js';\nimport { match as N } from '../../utils/match.js';\nimport { Features as Z, forwardRefWithAs as _, render as O } from '../../utils/render.js';\nimport { Description as Fe, useDescriptions as ke } from '../description/description.js';\nimport { Keys as Ie } from '../keyboard.js';\nvar Me = (r => (r[r.Open = 0] = \"Open\", r[r.Closed = 1] = \"Closed\", r))(Me || {}),\n  we = (e => (e[e.SetTitleId = 0] = \"SetTitleId\", e))(we || {});\nlet He = {\n    [0](o, e) {\n      return o.titleId === e.id ? o : {\n        ...o,\n        titleId: e.id\n      };\n    }\n  },\n  I = Pe(null);\nI.displayName = \"DialogContext\";\nfunction b(o) {\n  let e = V(I);\n  if (e === null) {\n    let r = new Error(`<${o} /> is missing a parent <Dialog /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(r, b), r;\n  }\n  return e;\n}\nfunction Be(o, e, r = () => [document.body]) {\n  Ce(o, e, i => {\n    var n;\n    return {\n      containers: [...((n = i.containers) != null ? n : []), r]\n    };\n  });\n}\nfunction Ge(o, e) {\n  return N(e.type, He, o, e);\n}\nlet Ne = \"div\",\n  Ue = Z.RenderStrategy | Z.Static;\nfunction We(o, e) {\n  let r = C(),\n    {\n      id: i = `headlessui-dialog-${r}`,\n      open: n,\n      onClose: l,\n      initialFocus: s,\n      role: a = \"dialog\",\n      __demoMode: T = !1,\n      ...m\n    } = o,\n    [M, f] = Ae(0),\n    U = q(!1);\n  a = function () {\n    return a === \"dialog\" || a === \"alertdialog\" ? a : (U.current || (U.current = !0, console.warn(`Invalid role [${a}] passed to <Dialog />. Only \\`dialog\\` and and \\`alertdialog\\` are supported. Using \\`dialog\\` instead.`)), \"dialog\");\n  }();\n  let E = Se();\n  n === void 0 && E !== null && (n = (E & k.Open) === k.Open);\n  let D = q(null),\n    ee = v(D, e),\n    g = Oe(D),\n    W = o.hasOwnProperty(\"open\") || E !== null,\n    $ = o.hasOwnProperty(\"onClose\");\n  if (!W && !$) throw new Error(\"You have to provide an `open` and an `onClose` prop to the `Dialog` component.\");\n  if (!W) throw new Error(\"You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.\");\n  if (!$) throw new Error(\"You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.\");\n  if (typeof n != \"boolean\") throw new Error(`You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${n}`);\n  if (typeof l != \"function\") throw new Error(`You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${l}`);\n  let p = n ? 0 : 1,\n    [h, te] = Ee(Ge, {\n      titleId: null,\n      descriptionId: null,\n      panelRef: ye()\n    }),\n    P = R(() => l(!1)),\n    Y = R(t => te({\n      type: 0,\n      id: t\n    })),\n    S = he() ? T ? !1 : p === 0 : !1,\n    x = M > 1,\n    j = V(I) !== null,\n    [oe, re] = Re(),\n    ne = {\n      get current() {\n        var t;\n        return (t = h.panelRef.current) != null ? t : D.current;\n      }\n    },\n    {\n      resolveContainers: w,\n      mainTreeNodeRef: L,\n      MainTreeNode: le\n    } = be({\n      portals: oe,\n      defaultContainers: [ne]\n    }),\n    ae = x ? \"parent\" : \"leaf\",\n    J = E !== null ? (E & k.Closing) === k.Closing : !1,\n    ie = (() => j || J ? !1 : S)(),\n    se = K(() => {\n      var t, c;\n      return (c = Array.from((t = g == null ? void 0 : g.querySelectorAll(\"body > *\")) != null ? t : []).find(d => d.id === \"headlessui-portal-root\" ? !1 : d.contains(L.current) && d instanceof HTMLElement)) != null ? c : null;\n    }, [L]);\n  z(se, ie);\n  let pe = (() => x ? !0 : S)(),\n    de = K(() => {\n      var t, c;\n      return (c = Array.from((t = g == null ? void 0 : g.querySelectorAll(\"[data-headlessui-portal]\")) != null ? t : []).find(d => d.contains(L.current) && d instanceof HTMLElement)) != null ? c : null;\n    }, [L]);\n  z(de, pe);\n  let ue = (() => !(!S || x))();\n  _e(w, t => {\n    t.preventDefault(), P();\n  }, ue);\n  let fe = (() => !(x || p !== 0))();\n  ve(g == null ? void 0 : g.defaultView, \"keydown\", t => {\n    fe && (t.defaultPrevented || t.key === Ie.Escape && (t.preventDefault(), t.stopPropagation(), P()));\n  });\n  let ge = (() => !(J || p !== 0 || j))();\n  Be(g, ge, w), H(() => {\n    if (p !== 0 || !D.current) return;\n    let t = new ResizeObserver(c => {\n      for (let d of c) {\n        let F = d.target.getBoundingClientRect();\n        F.x === 0 && F.y === 0 && F.width === 0 && F.height === 0 && P();\n      }\n    });\n    return t.observe(D.current), () => t.disconnect();\n  }, [p, D, P]);\n  let [Te, ce] = ke(),\n    De = y(() => [{\n      dialogState: p,\n      close: P,\n      setTitleId: Y\n    }, h], [p, h, P, Y]),\n    X = y(() => ({\n      open: p === 0\n    }), [p]),\n    me = {\n      ref: ee,\n      id: i,\n      role: a,\n      \"aria-modal\": p === 0 ? !0 : void 0,\n      \"aria-labelledby\": h.titleId,\n      \"aria-describedby\": Te\n    };\n  return u.createElement(xe, {\n    type: \"Dialog\",\n    enabled: p === 0,\n    element: D,\n    onUpdate: R((t, c) => {\n      c === \"Dialog\" && N(t, {\n        [Q.Add]: () => f(d => d + 1),\n        [Q.Remove]: () => f(d => d - 1)\n      });\n    })\n  }, u.createElement(G, {\n    force: !0\n  }, u.createElement(B, null, u.createElement(I.Provider, {\n    value: De\n  }, u.createElement(B.Group, {\n    target: D\n  }, u.createElement(G, {\n    force: !1\n  }, u.createElement(ce, {\n    slot: X,\n    name: \"Dialog.Description\"\n  }, u.createElement(A, {\n    initialFocus: s,\n    containers: w,\n    features: S ? N(ae, {\n      parent: A.features.RestoreFocus,\n      leaf: A.features.All & ~A.features.FocusLock\n    }) : A.features.None\n  }, u.createElement(re, null, O({\n    ourProps: me,\n    theirProps: m,\n    slot: X,\n    defaultTag: Ne,\n    features: Ue,\n    visible: p === 0,\n    name: \"Dialog\"\n  }))))))))), u.createElement(le, null));\n}\nlet $e = \"div\";\nfunction Ye(o, e) {\n  let r = C(),\n    {\n      id: i = `headlessui-dialog-overlay-${r}`,\n      ...n\n    } = o,\n    [{\n      dialogState: l,\n      close: s\n    }] = b(\"Dialog.Overlay\"),\n    a = v(e),\n    T = R(f => {\n      if (f.target === f.currentTarget) {\n        if (Le(f.currentTarget)) return f.preventDefault();\n        f.preventDefault(), f.stopPropagation(), s();\n      }\n    }),\n    m = y(() => ({\n      open: l === 0\n    }), [l]);\n  return O({\n    ourProps: {\n      ref: a,\n      id: i,\n      \"aria-hidden\": !0,\n      onClick: T\n    },\n    theirProps: n,\n    slot: m,\n    defaultTag: $e,\n    name: \"Dialog.Overlay\"\n  });\n}\nlet je = \"div\";\nfunction Je(o, e) {\n  let r = C(),\n    {\n      id: i = `headlessui-dialog-backdrop-${r}`,\n      ...n\n    } = o,\n    [{\n      dialogState: l\n    }, s] = b(\"Dialog.Backdrop\"),\n    a = v(e);\n  H(() => {\n    if (s.panelRef.current === null) throw new Error(\"A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.\");\n  }, [s.panelRef]);\n  let T = y(() => ({\n    open: l === 0\n  }), [l]);\n  return u.createElement(G, {\n    force: !0\n  }, u.createElement(B, null, O({\n    ourProps: {\n      ref: a,\n      id: i,\n      \"aria-hidden\": !0\n    },\n    theirProps: n,\n    slot: T,\n    defaultTag: je,\n    name: \"Dialog.Backdrop\"\n  })));\n}\nlet Xe = \"div\";\nfunction Ke(o, e) {\n  let r = C(),\n    {\n      id: i = `headlessui-dialog-panel-${r}`,\n      ...n\n    } = o,\n    [{\n      dialogState: l\n    }, s] = b(\"Dialog.Panel\"),\n    a = v(e, s.panelRef),\n    T = y(() => ({\n      open: l === 0\n    }), [l]),\n    m = R(f => {\n      f.stopPropagation();\n    });\n  return O({\n    ourProps: {\n      ref: a,\n      id: i,\n      onClick: m\n    },\n    theirProps: n,\n    slot: T,\n    defaultTag: Xe,\n    name: \"Dialog.Panel\"\n  });\n}\nlet Ve = \"h2\";\nfunction qe(o, e) {\n  let r = C(),\n    {\n      id: i = `headlessui-dialog-title-${r}`,\n      ...n\n    } = o,\n    [{\n      dialogState: l,\n      setTitleId: s\n    }] = b(\"Dialog.Title\"),\n    a = v(e);\n  H(() => (s(i), () => s(null)), [i, s]);\n  let T = y(() => ({\n    open: l === 0\n  }), [l]);\n  return O({\n    ourProps: {\n      ref: a,\n      id: i\n    },\n    theirProps: n,\n    slot: T,\n    defaultTag: Ve,\n    name: \"Dialog.Title\"\n  });\n}\nlet ze = _(We),\n  Qe = _(Je),\n  Ze = _(Ke),\n  et = _(Ye),\n  tt = _(qe),\n  _t = Object.assign(ze, {\n    Backdrop: Qe,\n    Panel: Ze,\n    Overlay: et,\n    Title: tt,\n    Description: Fe\n  });\nexport { _t as Dialog };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}