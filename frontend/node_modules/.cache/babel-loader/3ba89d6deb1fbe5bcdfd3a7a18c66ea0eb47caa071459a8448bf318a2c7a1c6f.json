{"ast":null,"code":"import { useEffect as d, useRef as f } from \"react\";\nimport { FocusableMode as p, isFocusableElement as C } from '../utils/focus-management.js';\nimport { isMobile as M } from '../utils/platform.js';\nimport { useDocumentEvent as l } from './use-document-event.js';\nimport { useWindowEvent as T } from './use-window-event.js';\nfunction y(s, m, a = !0) {\n  let i = f(!1);\n  d(() => {\n    requestAnimationFrame(() => {\n      i.current = a;\n    });\n  }, [a]);\n  function c(e, r) {\n    if (!i.current || e.defaultPrevented) return;\n    let t = r(e);\n    if (t === null || !t.getRootNode().contains(t) || !t.isConnected) return;\n    let E = function u(n) {\n      return typeof n == \"function\" ? u(n()) : Array.isArray(n) || n instanceof Set ? n : [n];\n    }(s);\n    for (let u of E) {\n      if (u === null) continue;\n      let n = u instanceof HTMLElement ? u : u.current;\n      if (n != null && n.contains(t) || e.composed && e.composedPath().includes(n)) return;\n    }\n    return !C(t, p.Loose) && t.tabIndex !== -1 && e.preventDefault(), m(e, t);\n  }\n  let o = f(null);\n  l(\"pointerdown\", e => {\n    var r, t;\n    i.current && (o.current = ((t = (r = e.composedPath) == null ? void 0 : r.call(e)) == null ? void 0 : t[0]) || e.target);\n  }, !0), l(\"mousedown\", e => {\n    var r, t;\n    i.current && (o.current = ((t = (r = e.composedPath) == null ? void 0 : r.call(e)) == null ? void 0 : t[0]) || e.target);\n  }, !0), l(\"click\", e => {\n    M() || o.current && (c(e, () => o.current), o.current = null);\n  }, !0), l(\"touchend\", e => c(e, () => e.target instanceof HTMLElement ? e.target : null), !0), T(\"blur\", e => c(e, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), !0);\n}\nexport { y as useOutsideClick };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}