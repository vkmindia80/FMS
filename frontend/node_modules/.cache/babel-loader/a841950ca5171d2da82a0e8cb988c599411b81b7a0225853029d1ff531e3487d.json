{"ast":null,"code":"import N, { createContext as Z, createRef as xe, Fragment as ye, useCallback as ge, useContext as ee, useEffect as te, useMemo as E, useReducer as Le, useRef as h } from \"react\";\nimport { useComputed as oe } from '../../hooks/use-computed.js';\nimport { useControllable as Oe } from '../../hooks/use-controllable.js';\nimport { useDisposables as j } from '../../hooks/use-disposables.js';\nimport { useEvent as f } from '../../hooks/use-event.js';\nimport { useId as V } from '../../hooks/use-id.js';\nimport { useIsoMorphicEffect as K } from '../../hooks/use-iso-morphic-effect.js';\nimport { useLatestValue as me } from '../../hooks/use-latest-value.js';\nimport { useOutsideClick as Re } from '../../hooks/use-outside-click.js';\nimport { useResolveButtonType as ve } from '../../hooks/use-resolve-button-type.js';\nimport { useSyncRefs as _ } from '../../hooks/use-sync-refs.js';\nimport { useTextValue as Ae } from '../../hooks/use-text-value.js';\nimport { useTrackedPointer as Se } from '../../hooks/use-tracked-pointer.js';\nimport { Features as Pe, Hidden as Ee } from '../../internal/hidden.js';\nimport { OpenClosedProvider as he, State as Q, useOpenClosed as De } from '../../internal/open-closed.js';\nimport { isDisabledReactIssue7711 as Ie } from '../../utils/bugs.js';\nimport { calculateActiveIndex as Ce, Focus as v } from '../../utils/calculate-active-index.js';\nimport { disposables as $ } from '../../utils/disposables.js';\nimport { FocusableMode as _e, isFocusableElement as Fe, sortByDomNode as Me } from '../../utils/focus-management.js';\nimport { objectToFormEntries as ke } from '../../utils/form.js';\nimport { match as D } from '../../utils/match.js';\nimport { getOwnerDocument as we } from '../../utils/owner.js';\nimport { compact as Ue, Features as ne, forwardRefWithAs as F, render as M } from '../../utils/render.js';\nimport { Keys as y } from '../keyboard.js';\nvar Be = (n => (n[n.Open = 0] = \"Open\", n[n.Closed = 1] = \"Closed\", n))(Be || {}),\n  He = (n => (n[n.Single = 0] = \"Single\", n[n.Multi = 1] = \"Multi\", n))(He || {}),\n  Ge = (n => (n[n.Pointer = 0] = \"Pointer\", n[n.Other = 1] = \"Other\", n))(Ge || {}),\n  Ne = (i => (i[i.OpenListbox = 0] = \"OpenListbox\", i[i.CloseListbox = 1] = \"CloseListbox\", i[i.GoToOption = 2] = \"GoToOption\", i[i.Search = 3] = \"Search\", i[i.ClearSearch = 4] = \"ClearSearch\", i[i.RegisterOption = 5] = \"RegisterOption\", i[i.UnregisterOption = 6] = \"UnregisterOption\", i[i.RegisterLabel = 7] = \"RegisterLabel\", i))(Ne || {});\nfunction z(e, a = n => n) {\n  let n = e.activeOptionIndex !== null ? e.options[e.activeOptionIndex] : null,\n    r = Me(a(e.options.slice()), t => t.dataRef.current.domRef.current),\n    l = n ? r.indexOf(n) : null;\n  return l === -1 && (l = null), {\n    options: r,\n    activeOptionIndex: l\n  };\n}\nlet je = {\n    [1](e) {\n      return e.dataRef.current.disabled || e.listboxState === 1 ? e : {\n        ...e,\n        activeOptionIndex: null,\n        listboxState: 1\n      };\n    },\n    [0](e) {\n      if (e.dataRef.current.disabled || e.listboxState === 0) return e;\n      let a = e.activeOptionIndex,\n        {\n          isSelected: n\n        } = e.dataRef.current,\n        r = e.options.findIndex(l => n(l.dataRef.current.value));\n      return r !== -1 && (a = r), {\n        ...e,\n        listboxState: 0,\n        activeOptionIndex: a\n      };\n    },\n    [2](e, a) {\n      var l;\n      if (e.dataRef.current.disabled || e.listboxState === 1) return e;\n      let n = z(e),\n        r = Ce(a, {\n          resolveItems: () => n.options,\n          resolveActiveIndex: () => n.activeOptionIndex,\n          resolveId: t => t.id,\n          resolveDisabled: t => t.dataRef.current.disabled\n        });\n      return {\n        ...e,\n        ...n,\n        searchQuery: \"\",\n        activeOptionIndex: r,\n        activationTrigger: (l = a.trigger) != null ? l : 1\n      };\n    },\n    [3]: (e, a) => {\n      if (e.dataRef.current.disabled || e.listboxState === 1) return e;\n      let r = e.searchQuery !== \"\" ? 0 : 1,\n        l = e.searchQuery + a.value.toLowerCase(),\n        p = (e.activeOptionIndex !== null ? e.options.slice(e.activeOptionIndex + r).concat(e.options.slice(0, e.activeOptionIndex + r)) : e.options).find(i => {\n          var b;\n          return !i.dataRef.current.disabled && ((b = i.dataRef.current.textValue) == null ? void 0 : b.startsWith(l));\n        }),\n        u = p ? e.options.indexOf(p) : -1;\n      return u === -1 || u === e.activeOptionIndex ? {\n        ...e,\n        searchQuery: l\n      } : {\n        ...e,\n        searchQuery: l,\n        activeOptionIndex: u,\n        activationTrigger: 1\n      };\n    },\n    [4](e) {\n      return e.dataRef.current.disabled || e.listboxState === 1 || e.searchQuery === \"\" ? e : {\n        ...e,\n        searchQuery: \"\"\n      };\n    },\n    [5]: (e, a) => {\n      let n = {\n          id: a.id,\n          dataRef: a.dataRef\n        },\n        r = z(e, l => [...l, n]);\n      return e.activeOptionIndex === null && e.dataRef.current.isSelected(a.dataRef.current.value) && (r.activeOptionIndex = r.options.indexOf(n)), {\n        ...e,\n        ...r\n      };\n    },\n    [6]: (e, a) => {\n      let n = z(e, r => {\n        let l = r.findIndex(t => t.id === a.id);\n        return l !== -1 && r.splice(l, 1), r;\n      });\n      return {\n        ...e,\n        ...n,\n        activationTrigger: 1\n      };\n    },\n    [7]: (e, a) => ({\n      ...e,\n      labelId: a.id\n    })\n  },\n  J = Z(null);\nJ.displayName = \"ListboxActionsContext\";\nfunction k(e) {\n  let a = ee(J);\n  if (a === null) {\n    let n = new Error(`<${e} /> is missing a parent <Listbox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(n, k), n;\n  }\n  return a;\n}\nlet q = Z(null);\nq.displayName = \"ListboxDataContext\";\nfunction w(e) {\n  let a = ee(q);\n  if (a === null) {\n    let n = new Error(`<${e} /> is missing a parent <Listbox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(n, w), n;\n  }\n  return a;\n}\nfunction Ve(e, a) {\n  return D(a.type, je, e, a);\n}\nlet Ke = ye;\nfunction Qe(e, a) {\n  let {\n    value: n,\n    defaultValue: r,\n    form: l,\n    name: t,\n    onChange: p,\n    by: u = (s, c) => s === c,\n    disabled: i = !1,\n    horizontal: b = !1,\n    multiple: R = !1,\n    ...m\n  } = e;\n  const P = b ? \"horizontal\" : \"vertical\";\n  let S = _(a),\n    [g = R ? [] : void 0, x] = Oe(n, p, r),\n    [T, o] = Le(Ve, {\n      dataRef: xe(),\n      listboxState: 1,\n      options: [],\n      searchQuery: \"\",\n      labelId: null,\n      activeOptionIndex: null,\n      activationTrigger: 1\n    }),\n    L = h({\n      static: !1,\n      hold: !1\n    }),\n    U = h(null),\n    B = h(null),\n    W = h(null),\n    I = f(typeof u == \"string\" ? (s, c) => {\n      let O = u;\n      return (s == null ? void 0 : s[O]) === (c == null ? void 0 : c[O]);\n    } : u),\n    A = ge(s => D(d.mode, {\n      [1]: () => g.some(c => I(c, s)),\n      [0]: () => I(g, s)\n    }), [g]),\n    d = E(() => ({\n      ...T,\n      value: g,\n      disabled: i,\n      mode: R ? 1 : 0,\n      orientation: P,\n      compare: I,\n      isSelected: A,\n      optionsPropsRef: L,\n      labelRef: U,\n      buttonRef: B,\n      optionsRef: W\n    }), [g, i, R, T]);\n  K(() => {\n    T.dataRef.current = d;\n  }, [d]), Re([d.buttonRef, d.optionsRef], (s, c) => {\n    var O;\n    o({\n      type: 1\n    }), Fe(c, _e.Loose) || (s.preventDefault(), (O = d.buttonRef.current) == null || O.focus());\n  }, d.listboxState === 0);\n  let H = E(() => ({\n      open: d.listboxState === 0,\n      disabled: i,\n      value: g\n    }), [d, i, g]),\n    ie = f(s => {\n      let c = d.options.find(O => O.id === s);\n      c && X(c.dataRef.current.value);\n    }),\n    re = f(() => {\n      if (d.activeOptionIndex !== null) {\n        let {\n          dataRef: s,\n          id: c\n        } = d.options[d.activeOptionIndex];\n        X(s.current.value), o({\n          type: 2,\n          focus: v.Specific,\n          id: c\n        });\n      }\n    }),\n    ae = f(() => o({\n      type: 0\n    })),\n    le = f(() => o({\n      type: 1\n    })),\n    se = f((s, c, O) => s === v.Specific ? o({\n      type: 2,\n      focus: v.Specific,\n      id: c,\n      trigger: O\n    }) : o({\n      type: 2,\n      focus: s,\n      trigger: O\n    })),\n    pe = f((s, c) => (o({\n      type: 5,\n      id: s,\n      dataRef: c\n    }), () => o({\n      type: 6,\n      id: s\n    }))),\n    ue = f(s => (o({\n      type: 7,\n      id: s\n    }), () => o({\n      type: 7,\n      id: null\n    }))),\n    X = f(s => D(d.mode, {\n      [0]() {\n        return x == null ? void 0 : x(s);\n      },\n      [1]() {\n        let c = d.value.slice(),\n          O = c.findIndex(C => I(C, s));\n        return O === -1 ? c.push(s) : c.splice(O, 1), x == null ? void 0 : x(c);\n      }\n    })),\n    de = f(s => o({\n      type: 3,\n      value: s\n    })),\n    ce = f(() => o({\n      type: 4\n    })),\n    fe = E(() => ({\n      onChange: X,\n      registerOption: pe,\n      registerLabel: ue,\n      goToOption: se,\n      closeListbox: le,\n      openListbox: ae,\n      selectActiveOption: re,\n      selectOption: ie,\n      search: de,\n      clearSearch: ce\n    }), []),\n    Te = {\n      ref: S\n    },\n    G = h(null),\n    be = j();\n  return te(() => {\n    G.current && r !== void 0 && be.addEventListener(G.current, \"reset\", () => {\n      x == null || x(r);\n    });\n  }, [G, x]), N.createElement(J.Provider, {\n    value: fe\n  }, N.createElement(q.Provider, {\n    value: d\n  }, N.createElement(he, {\n    value: D(d.listboxState, {\n      [0]: Q.Open,\n      [1]: Q.Closed\n    })\n  }, t != null && g != null && ke({\n    [t]: g\n  }).map(([s, c], O) => N.createElement(Ee, {\n    features: Pe.Hidden,\n    ref: O === 0 ? C => {\n      var Y;\n      G.current = (Y = C == null ? void 0 : C.closest(\"form\")) != null ? Y : null;\n    } : void 0,\n    ...Ue({\n      key: s,\n      as: \"input\",\n      type: \"hidden\",\n      hidden: !0,\n      readOnly: !0,\n      form: l,\n      disabled: i,\n      name: s,\n      value: c\n    })\n  })), M({\n    ourProps: Te,\n    theirProps: m,\n    slot: H,\n    defaultTag: Ke,\n    name: \"Listbox\"\n  }))));\n}\nlet We = \"button\";\nfunction Xe(e, a) {\n  var x;\n  let n = V(),\n    {\n      id: r = `headlessui-listbox-button-${n}`,\n      ...l\n    } = e,\n    t = w(\"Listbox.Button\"),\n    p = k(\"Listbox.Button\"),\n    u = _(t.buttonRef, a),\n    i = j(),\n    b = f(T => {\n      switch (T.key) {\n        case y.Space:\n        case y.Enter:\n        case y.ArrowDown:\n          T.preventDefault(), p.openListbox(), i.nextFrame(() => {\n            t.value || p.goToOption(v.First);\n          });\n          break;\n        case y.ArrowUp:\n          T.preventDefault(), p.openListbox(), i.nextFrame(() => {\n            t.value || p.goToOption(v.Last);\n          });\n          break;\n      }\n    }),\n    R = f(T => {\n      switch (T.key) {\n        case y.Space:\n          T.preventDefault();\n          break;\n      }\n    }),\n    m = f(T => {\n      if (Ie(T.currentTarget)) return T.preventDefault();\n      t.listboxState === 0 ? (p.closeListbox(), i.nextFrame(() => {\n        var o;\n        return (o = t.buttonRef.current) == null ? void 0 : o.focus({\n          preventScroll: !0\n        });\n      })) : (T.preventDefault(), p.openListbox());\n    }),\n    P = oe(() => {\n      if (t.labelId) return [t.labelId, r].join(\" \");\n    }, [t.labelId, r]),\n    S = E(() => ({\n      open: t.listboxState === 0,\n      disabled: t.disabled,\n      value: t.value\n    }), [t]),\n    g = {\n      ref: u,\n      id: r,\n      type: ve(e, t.buttonRef),\n      \"aria-haspopup\": \"listbox\",\n      \"aria-controls\": (x = t.optionsRef.current) == null ? void 0 : x.id,\n      \"aria-expanded\": t.listboxState === 0,\n      \"aria-labelledby\": P,\n      disabled: t.disabled,\n      onKeyDown: b,\n      onKeyUp: R,\n      onClick: m\n    };\n  return M({\n    ourProps: g,\n    theirProps: l,\n    slot: S,\n    defaultTag: We,\n    name: \"Listbox.Button\"\n  });\n}\nlet $e = \"label\";\nfunction ze(e, a) {\n  let n = V(),\n    {\n      id: r = `headlessui-listbox-label-${n}`,\n      ...l\n    } = e,\n    t = w(\"Listbox.Label\"),\n    p = k(\"Listbox.Label\"),\n    u = _(t.labelRef, a);\n  K(() => p.registerLabel(r), [r]);\n  let i = f(() => {\n      var m;\n      return (m = t.buttonRef.current) == null ? void 0 : m.focus({\n        preventScroll: !0\n      });\n    }),\n    b = E(() => ({\n      open: t.listboxState === 0,\n      disabled: t.disabled\n    }), [t]);\n  return M({\n    ourProps: {\n      ref: u,\n      id: r,\n      onClick: i\n    },\n    theirProps: l,\n    slot: b,\n    defaultTag: $e,\n    name: \"Listbox.Label\"\n  });\n}\nlet Je = \"ul\",\n  qe = ne.RenderStrategy | ne.Static;\nfunction Ye(e, a) {\n  var T;\n  let n = V(),\n    {\n      id: r = `headlessui-listbox-options-${n}`,\n      ...l\n    } = e,\n    t = w(\"Listbox.Options\"),\n    p = k(\"Listbox.Options\"),\n    u = _(t.optionsRef, a),\n    i = j(),\n    b = j(),\n    R = De(),\n    m = (() => R !== null ? (R & Q.Open) === Q.Open : t.listboxState === 0)();\n  te(() => {\n    var L;\n    let o = t.optionsRef.current;\n    o && t.listboxState === 0 && o !== ((L = we(o)) == null ? void 0 : L.activeElement) && o.focus({\n      preventScroll: !0\n    });\n  }, [t.listboxState, t.optionsRef]);\n  let P = f(o => {\n      switch (b.dispose(), o.key) {\n        case y.Space:\n          if (t.searchQuery !== \"\") return o.preventDefault(), o.stopPropagation(), p.search(o.key);\n        case y.Enter:\n          if (o.preventDefault(), o.stopPropagation(), t.activeOptionIndex !== null) {\n            let {\n              dataRef: L\n            } = t.options[t.activeOptionIndex];\n            p.onChange(L.current.value);\n          }\n          t.mode === 0 && (p.closeListbox(), $().nextFrame(() => {\n            var L;\n            return (L = t.buttonRef.current) == null ? void 0 : L.focus({\n              preventScroll: !0\n            });\n          }));\n          break;\n        case D(t.orientation, {\n          vertical: y.ArrowDown,\n          horizontal: y.ArrowRight\n        }):\n          return o.preventDefault(), o.stopPropagation(), p.goToOption(v.Next);\n        case D(t.orientation, {\n          vertical: y.ArrowUp,\n          horizontal: y.ArrowLeft\n        }):\n          return o.preventDefault(), o.stopPropagation(), p.goToOption(v.Previous);\n        case y.Home:\n        case y.PageUp:\n          return o.preventDefault(), o.stopPropagation(), p.goToOption(v.First);\n        case y.End:\n        case y.PageDown:\n          return o.preventDefault(), o.stopPropagation(), p.goToOption(v.Last);\n        case y.Escape:\n          return o.preventDefault(), o.stopPropagation(), p.closeListbox(), i.nextFrame(() => {\n            var L;\n            return (L = t.buttonRef.current) == null ? void 0 : L.focus({\n              preventScroll: !0\n            });\n          });\n        case y.Tab:\n          o.preventDefault(), o.stopPropagation();\n          break;\n        default:\n          o.key.length === 1 && (p.search(o.key), b.setTimeout(() => p.clearSearch(), 350));\n          break;\n      }\n    }),\n    S = oe(() => {\n      var o;\n      return (o = t.buttonRef.current) == null ? void 0 : o.id;\n    }, [t.buttonRef.current]),\n    g = E(() => ({\n      open: t.listboxState === 0\n    }), [t]),\n    x = {\n      \"aria-activedescendant\": t.activeOptionIndex === null || (T = t.options[t.activeOptionIndex]) == null ? void 0 : T.id,\n      \"aria-multiselectable\": t.mode === 1 ? !0 : void 0,\n      \"aria-labelledby\": S,\n      \"aria-orientation\": t.orientation,\n      id: r,\n      onKeyDown: P,\n      role: \"listbox\",\n      tabIndex: 0,\n      ref: u\n    };\n  return M({\n    ourProps: x,\n    theirProps: l,\n    slot: g,\n    defaultTag: Je,\n    features: qe,\n    visible: m,\n    name: \"Listbox.Options\"\n  });\n}\nlet Ze = \"li\";\nfunction et(e, a) {\n  let n = V(),\n    {\n      id: r = `headlessui-listbox-option-${n}`,\n      disabled: l = !1,\n      value: t,\n      ...p\n    } = e,\n    u = w(\"Listbox.Option\"),\n    i = k(\"Listbox.Option\"),\n    b = u.activeOptionIndex !== null ? u.options[u.activeOptionIndex].id === r : !1,\n    R = u.isSelected(t),\n    m = h(null),\n    P = Ae(m),\n    S = me({\n      disabled: l,\n      value: t,\n      domRef: m,\n      get textValue() {\n        return P();\n      }\n    }),\n    g = _(a, m);\n  K(() => {\n    if (u.listboxState !== 0 || !b || u.activationTrigger === 0) return;\n    let A = $();\n    return A.requestAnimationFrame(() => {\n      var d, H;\n      (H = (d = m.current) == null ? void 0 : d.scrollIntoView) == null || H.call(d, {\n        block: \"nearest\"\n      });\n    }), A.dispose;\n  }, [m, b, u.listboxState, u.activationTrigger, u.activeOptionIndex]), K(() => i.registerOption(r, S), [S, r]);\n  let x = f(A => {\n      if (l) return A.preventDefault();\n      i.onChange(t), u.mode === 0 && (i.closeListbox(), $().nextFrame(() => {\n        var d;\n        return (d = u.buttonRef.current) == null ? void 0 : d.focus({\n          preventScroll: !0\n        });\n      }));\n    }),\n    T = f(() => {\n      if (l) return i.goToOption(v.Nothing);\n      i.goToOption(v.Specific, r);\n    }),\n    o = Se(),\n    L = f(A => o.update(A)),\n    U = f(A => {\n      o.wasMoved(A) && (l || b || i.goToOption(v.Specific, r, 0));\n    }),\n    B = f(A => {\n      o.wasMoved(A) && (l || b && i.goToOption(v.Nothing));\n    }),\n    W = E(() => ({\n      active: b,\n      selected: R,\n      disabled: l\n    }), [b, R, l]);\n  return M({\n    ourProps: {\n      id: r,\n      ref: g,\n      role: \"option\",\n      tabIndex: l === !0 ? void 0 : -1,\n      \"aria-disabled\": l === !0 ? !0 : void 0,\n      \"aria-selected\": R,\n      disabled: void 0,\n      onClick: x,\n      onFocus: T,\n      onPointerEnter: L,\n      onMouseEnter: L,\n      onPointerMove: U,\n      onMouseMove: U,\n      onPointerLeave: B,\n      onMouseLeave: B\n    },\n    theirProps: p,\n    slot: W,\n    defaultTag: Ze,\n    name: \"Listbox.Option\"\n  });\n}\nlet tt = F(Qe),\n  ot = F(Xe),\n  nt = F(ze),\n  it = F(Ye),\n  rt = F(et),\n  It = Object.assign(tt, {\n    Button: ot,\n    Label: nt,\n    Options: it,\n    Option: rt\n  });\nexport { It as Listbox };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}