{"ast":null,"code":"import G, { createContext as X, createRef as N, Fragment as H, useContext as $, useEffect as q, useMemo as v, useReducer as z, useRef as K } from \"react\";\nimport { useDisposables as j } from '../../hooks/use-disposables.js';\nimport { useEvent as d } from '../../hooks/use-event.js';\nimport { useId as O } from '../../hooks/use-id.js';\nimport { useIsoMorphicEffect as L } from '../../hooks/use-iso-morphic-effect.js';\nimport { useOutsideClick as Y } from '../../hooks/use-outside-click.js';\nimport { useOwnerDocument as Z } from '../../hooks/use-owner.js';\nimport { useResolveButtonType as ee } from '../../hooks/use-resolve-button-type.js';\nimport { useSyncRefs as h } from '../../hooks/use-sync-refs.js';\nimport { useTextValue as te } from '../../hooks/use-text-value.js';\nimport { useTrackedPointer as ne } from '../../hooks/use-tracked-pointer.js';\nimport { useTreeWalker as re } from '../../hooks/use-tree-walker.js';\nimport { OpenClosedProvider as oe, State as D, useOpenClosed as ae } from '../../internal/open-closed.js';\nimport { isDisabledReactIssue7711 as ie } from '../../utils/bugs.js';\nimport { calculateActiveIndex as se, Focus as y } from '../../utils/calculate-active-index.js';\nimport { disposables as k } from '../../utils/disposables.js';\nimport { Focus as Q, FocusableMode as ue, focusFrom as le, isFocusableElement as pe, restoreFocusIfNecessary as W, sortByDomNode as ce } from '../../utils/focus-management.js';\nimport { match as V } from '../../utils/match.js';\nimport { Features as J, forwardRefWithAs as F, render as _ } from '../../utils/render.js';\nimport { Keys as c } from '../keyboard.js';\nvar me = (r => (r[r.Open = 0] = \"Open\", r[r.Closed = 1] = \"Closed\", r))(me || {}),\n  de = (r => (r[r.Pointer = 0] = \"Pointer\", r[r.Other = 1] = \"Other\", r))(de || {}),\n  fe = (a => (a[a.OpenMenu = 0] = \"OpenMenu\", a[a.CloseMenu = 1] = \"CloseMenu\", a[a.GoToItem = 2] = \"GoToItem\", a[a.Search = 3] = \"Search\", a[a.ClearSearch = 4] = \"ClearSearch\", a[a.RegisterItem = 5] = \"RegisterItem\", a[a.UnregisterItem = 6] = \"UnregisterItem\", a))(fe || {});\nfunction w(e, u = r => r) {\n  let r = e.activeItemIndex !== null ? e.items[e.activeItemIndex] : null,\n    s = ce(u(e.items.slice()), t => t.dataRef.current.domRef.current),\n    i = r ? s.indexOf(r) : null;\n  return i === -1 && (i = null), {\n    items: s,\n    activeItemIndex: i\n  };\n}\nlet Te = {\n    [1](e) {\n      return e.menuState === 1 ? e : {\n        ...e,\n        activeItemIndex: null,\n        menuState: 1\n      };\n    },\n    [0](e) {\n      return e.menuState === 0 ? e : {\n        ...e,\n        __demoMode: !1,\n        menuState: 0\n      };\n    },\n    [2]: (e, u) => {\n      var i;\n      let r = w(e),\n        s = se(u, {\n          resolveItems: () => r.items,\n          resolveActiveIndex: () => r.activeItemIndex,\n          resolveId: t => t.id,\n          resolveDisabled: t => t.dataRef.current.disabled\n        });\n      return {\n        ...e,\n        ...r,\n        searchQuery: \"\",\n        activeItemIndex: s,\n        activationTrigger: (i = u.trigger) != null ? i : 1\n      };\n    },\n    [3]: (e, u) => {\n      let s = e.searchQuery !== \"\" ? 0 : 1,\n        i = e.searchQuery + u.value.toLowerCase(),\n        o = (e.activeItemIndex !== null ? e.items.slice(e.activeItemIndex + s).concat(e.items.slice(0, e.activeItemIndex + s)) : e.items).find(l => {\n          var m;\n          return ((m = l.dataRef.current.textValue) == null ? void 0 : m.startsWith(i)) && !l.dataRef.current.disabled;\n        }),\n        a = o ? e.items.indexOf(o) : -1;\n      return a === -1 || a === e.activeItemIndex ? {\n        ...e,\n        searchQuery: i\n      } : {\n        ...e,\n        searchQuery: i,\n        activeItemIndex: a,\n        activationTrigger: 1\n      };\n    },\n    [4](e) {\n      return e.searchQuery === \"\" ? e : {\n        ...e,\n        searchQuery: \"\",\n        searchActiveItemIndex: null\n      };\n    },\n    [5]: (e, u) => {\n      let r = w(e, s => [...s, {\n        id: u.id,\n        dataRef: u.dataRef\n      }]);\n      return {\n        ...e,\n        ...r\n      };\n    },\n    [6]: (e, u) => {\n      let r = w(e, s => {\n        let i = s.findIndex(t => t.id === u.id);\n        return i !== -1 && s.splice(i, 1), s;\n      });\n      return {\n        ...e,\n        ...r,\n        activationTrigger: 1\n      };\n    }\n  },\n  U = X(null);\nU.displayName = \"MenuContext\";\nfunction C(e) {\n  let u = $(U);\n  if (u === null) {\n    let r = new Error(`<${e} /> is missing a parent <Menu /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(r, C), r;\n  }\n  return u;\n}\nfunction ye(e, u) {\n  return V(u.type, Te, e, u);\n}\nlet Ie = H;\nfunction Me(e, u) {\n  let {\n      __demoMode: r = !1,\n      ...s\n    } = e,\n    i = z(ye, {\n      __demoMode: r,\n      menuState: r ? 0 : 1,\n      buttonRef: N(),\n      itemsRef: N(),\n      items: [],\n      searchQuery: \"\",\n      activeItemIndex: null,\n      activationTrigger: 1\n    }),\n    [{\n      menuState: t,\n      itemsRef: o,\n      buttonRef: a\n    }, l] = i,\n    m = h(u);\n  Y([a, o], (g, R) => {\n    var p;\n    l({\n      type: 1\n    }), pe(R, ue.Loose) || (g.preventDefault(), (p = a.current) == null || p.focus());\n  }, t === 0);\n  let I = d(() => {\n      l({\n        type: 1\n      });\n    }),\n    A = v(() => ({\n      open: t === 0,\n      close: I\n    }), [t, I]),\n    f = {\n      ref: m\n    };\n  return G.createElement(U.Provider, {\n    value: i\n  }, G.createElement(oe, {\n    value: V(t, {\n      [0]: D.Open,\n      [1]: D.Closed\n    })\n  }, _({\n    ourProps: f,\n    theirProps: s,\n    slot: A,\n    defaultTag: Ie,\n    name: \"Menu\"\n  })));\n}\nlet ge = \"button\";\nfunction Re(e, u) {\n  var R;\n  let r = O(),\n    {\n      id: s = `headlessui-menu-button-${r}`,\n      ...i\n    } = e,\n    [t, o] = C(\"Menu.Button\"),\n    a = h(t.buttonRef, u),\n    l = j(),\n    m = d(p => {\n      switch (p.key) {\n        case c.Space:\n        case c.Enter:\n        case c.ArrowDown:\n          p.preventDefault(), p.stopPropagation(), o({\n            type: 0\n          }), l.nextFrame(() => o({\n            type: 2,\n            focus: y.First\n          }));\n          break;\n        case c.ArrowUp:\n          p.preventDefault(), p.stopPropagation(), o({\n            type: 0\n          }), l.nextFrame(() => o({\n            type: 2,\n            focus: y.Last\n          }));\n          break;\n      }\n    }),\n    I = d(p => {\n      switch (p.key) {\n        case c.Space:\n          p.preventDefault();\n          break;\n      }\n    }),\n    A = d(p => {\n      if (ie(p.currentTarget)) return p.preventDefault();\n      e.disabled || (t.menuState === 0 ? (o({\n        type: 1\n      }), l.nextFrame(() => {\n        var M;\n        return (M = t.buttonRef.current) == null ? void 0 : M.focus({\n          preventScroll: !0\n        });\n      })) : (p.preventDefault(), o({\n        type: 0\n      })));\n    }),\n    f = v(() => ({\n      open: t.menuState === 0\n    }), [t]),\n    g = {\n      ref: a,\n      id: s,\n      type: ee(e, t.buttonRef),\n      \"aria-haspopup\": \"menu\",\n      \"aria-controls\": (R = t.itemsRef.current) == null ? void 0 : R.id,\n      \"aria-expanded\": t.menuState === 0,\n      onKeyDown: m,\n      onKeyUp: I,\n      onClick: A\n    };\n  return _({\n    ourProps: g,\n    theirProps: i,\n    slot: f,\n    defaultTag: ge,\n    name: \"Menu.Button\"\n  });\n}\nlet Ae = \"div\",\n  be = J.RenderStrategy | J.Static;\nfunction Ee(e, u) {\n  var M, b;\n  let r = O(),\n    {\n      id: s = `headlessui-menu-items-${r}`,\n      ...i\n    } = e,\n    [t, o] = C(\"Menu.Items\"),\n    a = h(t.itemsRef, u),\n    l = Z(t.itemsRef),\n    m = j(),\n    I = ae(),\n    A = (() => I !== null ? (I & D.Open) === D.Open : t.menuState === 0)();\n  q(() => {\n    let n = t.itemsRef.current;\n    n && t.menuState === 0 && n !== (l == null ? void 0 : l.activeElement) && n.focus({\n      preventScroll: !0\n    });\n  }, [t.menuState, t.itemsRef, l]), re({\n    container: t.itemsRef.current,\n    enabled: t.menuState === 0,\n    accept(n) {\n      return n.getAttribute(\"role\") === \"menuitem\" ? NodeFilter.FILTER_REJECT : n.hasAttribute(\"role\") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;\n    },\n    walk(n) {\n      n.setAttribute(\"role\", \"none\");\n    }\n  });\n  let f = d(n => {\n      var E, x;\n      switch (m.dispose(), n.key) {\n        case c.Space:\n          if (t.searchQuery !== \"\") return n.preventDefault(), n.stopPropagation(), o({\n            type: 3,\n            value: n.key\n          });\n        case c.Enter:\n          if (n.preventDefault(), n.stopPropagation(), o({\n            type: 1\n          }), t.activeItemIndex !== null) {\n            let {\n              dataRef: S\n            } = t.items[t.activeItemIndex];\n            (x = (E = S.current) == null ? void 0 : E.domRef.current) == null || x.click();\n          }\n          W(t.buttonRef.current);\n          break;\n        case c.ArrowDown:\n          return n.preventDefault(), n.stopPropagation(), o({\n            type: 2,\n            focus: y.Next\n          });\n        case c.ArrowUp:\n          return n.preventDefault(), n.stopPropagation(), o({\n            type: 2,\n            focus: y.Previous\n          });\n        case c.Home:\n        case c.PageUp:\n          return n.preventDefault(), n.stopPropagation(), o({\n            type: 2,\n            focus: y.First\n          });\n        case c.End:\n        case c.PageDown:\n          return n.preventDefault(), n.stopPropagation(), o({\n            type: 2,\n            focus: y.Last\n          });\n        case c.Escape:\n          n.preventDefault(), n.stopPropagation(), o({\n            type: 1\n          }), k().nextFrame(() => {\n            var S;\n            return (S = t.buttonRef.current) == null ? void 0 : S.focus({\n              preventScroll: !0\n            });\n          });\n          break;\n        case c.Tab:\n          n.preventDefault(), n.stopPropagation(), o({\n            type: 1\n          }), k().nextFrame(() => {\n            le(t.buttonRef.current, n.shiftKey ? Q.Previous : Q.Next);\n          });\n          break;\n        default:\n          n.key.length === 1 && (o({\n            type: 3,\n            value: n.key\n          }), m.setTimeout(() => o({\n            type: 4\n          }), 350));\n          break;\n      }\n    }),\n    g = d(n => {\n      switch (n.key) {\n        case c.Space:\n          n.preventDefault();\n          break;\n      }\n    }),\n    R = v(() => ({\n      open: t.menuState === 0\n    }), [t]),\n    p = {\n      \"aria-activedescendant\": t.activeItemIndex === null || (M = t.items[t.activeItemIndex]) == null ? void 0 : M.id,\n      \"aria-labelledby\": (b = t.buttonRef.current) == null ? void 0 : b.id,\n      id: s,\n      onKeyDown: f,\n      onKeyUp: g,\n      role: \"menu\",\n      tabIndex: 0,\n      ref: a\n    };\n  return _({\n    ourProps: p,\n    theirProps: i,\n    slot: R,\n    defaultTag: Ae,\n    features: be,\n    visible: A,\n    name: \"Menu.Items\"\n  });\n}\nlet Se = H;\nfunction xe(e, u) {\n  let r = O(),\n    {\n      id: s = `headlessui-menu-item-${r}`,\n      disabled: i = !1,\n      ...t\n    } = e,\n    [o, a] = C(\"Menu.Item\"),\n    l = o.activeItemIndex !== null ? o.items[o.activeItemIndex].id === s : !1,\n    m = K(null),\n    I = h(u, m);\n  L(() => {\n    if (o.__demoMode || o.menuState !== 0 || !l || o.activationTrigger === 0) return;\n    let T = k();\n    return T.requestAnimationFrame(() => {\n      var P, B;\n      (B = (P = m.current) == null ? void 0 : P.scrollIntoView) == null || B.call(P, {\n        block: \"nearest\"\n      });\n    }), T.dispose;\n  }, [o.__demoMode, m, l, o.menuState, o.activationTrigger, o.activeItemIndex]);\n  let A = te(m),\n    f = K({\n      disabled: i,\n      domRef: m,\n      get textValue() {\n        return A();\n      }\n    });\n  L(() => {\n    f.current.disabled = i;\n  }, [f, i]), L(() => (a({\n    type: 5,\n    id: s,\n    dataRef: f\n  }), () => a({\n    type: 6,\n    id: s\n  })), [f, s]);\n  let g = d(() => {\n      a({\n        type: 1\n      });\n    }),\n    R = d(T => {\n      if (i) return T.preventDefault();\n      a({\n        type: 1\n      }), W(o.buttonRef.current);\n    }),\n    p = d(() => {\n      if (i) return a({\n        type: 2,\n        focus: y.Nothing\n      });\n      a({\n        type: 2,\n        focus: y.Specific,\n        id: s\n      });\n    }),\n    M = ne(),\n    b = d(T => M.update(T)),\n    n = d(T => {\n      M.wasMoved(T) && (i || l || a({\n        type: 2,\n        focus: y.Specific,\n        id: s,\n        trigger: 0\n      }));\n    }),\n    E = d(T => {\n      M.wasMoved(T) && (i || l && a({\n        type: 2,\n        focus: y.Nothing\n      }));\n    }),\n    x = v(() => ({\n      active: l,\n      disabled: i,\n      close: g\n    }), [l, i, g]);\n  return _({\n    ourProps: {\n      id: s,\n      ref: I,\n      role: \"menuitem\",\n      tabIndex: i === !0 ? void 0 : -1,\n      \"aria-disabled\": i === !0 ? !0 : void 0,\n      disabled: void 0,\n      onClick: R,\n      onFocus: p,\n      onPointerEnter: b,\n      onMouseEnter: b,\n      onPointerMove: n,\n      onMouseMove: n,\n      onPointerLeave: E,\n      onMouseLeave: E\n    },\n    theirProps: t,\n    slot: x,\n    defaultTag: Se,\n    name: \"Menu.Item\"\n  });\n}\nlet Pe = F(Me),\n  ve = F(Re),\n  he = F(Ee),\n  De = F(xe),\n  qe = Object.assign(Pe, {\n    Button: ve,\n    Items: he,\n    Item: De\n  });\nexport { qe as Menu };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}