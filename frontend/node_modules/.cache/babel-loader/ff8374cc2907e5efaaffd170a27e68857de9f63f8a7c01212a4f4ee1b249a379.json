{"ast":null,"code":"import { useIsoMorphicEffect as s } from './use-iso-morphic-effect.js';\nlet u = new Map(),\n  t = new Map();\nfunction b(r, l = !0) {\n  s(() => {\n    var o;\n    if (!l) return;\n    let e = typeof r == \"function\" ? r() : r.current;\n    if (!e) return;\n    function a() {\n      var d;\n      if (!e) return;\n      let i = (d = t.get(e)) != null ? d : 1;\n      if (i === 1 ? t.delete(e) : t.set(e, i - 1), i !== 1) return;\n      let n = u.get(e);\n      n && (n[\"aria-hidden\"] === null ? e.removeAttribute(\"aria-hidden\") : e.setAttribute(\"aria-hidden\", n[\"aria-hidden\"]), e.inert = n.inert, u.delete(e));\n    }\n    let f = (o = t.get(e)) != null ? o : 0;\n    return t.set(e, f + 1), f !== 0 || (u.set(e, {\n      \"aria-hidden\": e.getAttribute(\"aria-hidden\"),\n      inert: e.inert\n    }), e.setAttribute(\"aria-hidden\", \"true\"), e.inert = !0), a;\n  }, [r, l]);\n}\nexport { b as useInert };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}