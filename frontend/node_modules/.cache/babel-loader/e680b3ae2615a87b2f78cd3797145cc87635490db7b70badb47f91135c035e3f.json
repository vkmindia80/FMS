{"ast":null,"code":"import { useEffect as l, useRef as i } from \"react\";\nimport { useEvent as r } from './use-event.js';\nlet u = Symbol();\nfunction T(t, n = !0) {\n  return Object.assign(t, {\n    [u]: n\n  });\n}\nfunction y(...t) {\n  let n = i(t);\n  l(() => {\n    n.current = t;\n  }, [t]);\n  let c = r(e => {\n    for (let o of n.current) o != null && (typeof o == \"function\" ? o(e) : o.current = e);\n  });\n  return t.every(e => e == null || (e == null ? void 0 : e[u])) ? void 0 : c;\n}\nexport { T as optionalRef, y as useSyncRefs };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}